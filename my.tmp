My:
function(x, start, stop)
instruction :
	GETBUILTIN_OP 1
	BASEGUARD_OP 3 9
	GETVAR_OP 4
	ISCHARACTER_OP
	PUSHARG_OP
	CALLBUILTIN_OP 2
	BRIFNOT_OP 5 29
	BASEGUARD_OP 6 25
	GETBUILTIN_OP 7
	GETVAR_OP 4
	PUSHARG_OP
	CALLBUILTIN_OP 6
	SETVAR_OP 4
	GOTO_OP 30
	LDNULL_OP
	POP_OP
	BASEGUARD_OP 9 63
	GETINTLBUILTIN_OP 10
	GETVAR_OP 4
	PUSHARG_OP
	BASEGUARD_OP 11 49
	GETBUILTIN_OP 12
	GETVAR_OP 13
	PUSHARG_OP
	CALLBUILTIN_OP 11
	PUSHARG_OP
	BASEGUARD_OP 14 60
	GETBUILTIN_OP 12
	GETVAR_OP 15
	PUSHARG_OP
	CALLBUILTIN_OP 14
	PUSHARG_OP
	CALLBUILTIN_OP 16
	RETURN_OP
constant pool : [{(if(!(is.character(x)), <-(x, as.character(x))), .Internal(substr(x, as.integer(start), as.integer(stop)))), !, !(is.character(x)), is.character(x), x, if(!(is.character(x)), <-(x, as.character(x))), as.character(x), as.character, <-(x, as.character(x)), .Internal(substr(x, as.integer(start), as.integer(stop))), substr, as.integer(start), as.integer, start, as.integer(stop), stop, substr(x, as.integer(start), as.integer(stop)), (data : [-2147483648, 2, 2, 3, 3, 3, 4, 4, 3, 2, 2, 2, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 8, 8, 5, 5, 5, 5, 9, 9, 9, 9, 9, 9, 9, 9, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 9, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 9, 9, 9, 9], args : list: [(class) ['expressionsIndex']])]

(env : parent : global env, frame : (x) { [[(X, i) (['substr'], empty env) })
